{"version":3,"file":"static/js/526.8834a06f.chunk.js","mappings":"yPAMMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,wBACNC,SAAS,0BACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,+BACPF,SAAS,4BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,iBAAkBV,EAClBW,cAAe,CAAER,MAAO,GAAIE,SAAU,IACtCO,SAVkB,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9CP,GAASQ,EAAAA,EAAAA,IAAMH,IACfC,GAAc,GACdC,GACD,EAGC,SAKG,gBAAGE,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,CACEC,aAAa,MACbC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAF3C,WAIE,kBAAOC,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,KAAK,WACpC,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,SAErC,kBAAOJ,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,GAAG,WAAWC,KAAK,WAAWC,KAAK,cAC1C,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,SACxC,mBACEP,MAAO,CAAEQ,MAAO,SAChBH,KAAK,SACLI,SAAUX,EAHZ,sBAZH,GAuBN,E,SClDYY,E,QAAYC,GAAAA,IAAH,+JCctB,EAXc,WACZ,OACE,UAACD,EAAD,YACE,SAACE,EAAA,EAAD,WACE,wCAEF,SAACxB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/authOperations';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  password: Yup.string()\n    .min(4, 'Should be more 4 characters')\n    .required('This field is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(logIn(values));\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={ValidationSchema}\n      initialValues={{ email: '', password: '' }}\n      onSubmit={handleSubmmit}\n    >\n      {({ isSubmitting }) => (\n        <Form\n          autoComplete=\"off\"\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <Field id=\"email\" type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <label htmlFor=\"password\">Password</label>\n          <Field id=\"password\" type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <button\n            style={{ width: '100px' }}\n            type=\"submit\"\n            disabled={isSubmitting}\n          >\n            Log In\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  max-width: 382px;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm';\nimport { Container } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["ValidationSchema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","validationSchema","initialValues","onSubmit","values","setSubmitting","resetForm","logIn","isSubmitting","autoComplete","style","display","flexDirection","htmlFor","id","type","name","component","width","disabled","Container","styled","Helmet"],"sourceRoot":""}