{"version":3,"file":"static/js/450.13be36d0.chunk.js","mappings":"+QAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oKASTE,EAAQF,EAAAA,GAAAA,MAAH,kEAKLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gSAgBLK,EAAQL,EAAAA,GAAAA,OAAH,oWAkBLM,EAAUN,EAAAA,GAAAA,EAAH,qNAYPO,EAAOP,EAAAA,GAAAA,IAAH,iJ,UCjDXQ,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,wBACNC,SAAS,0BACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,+BACPF,SAAS,4BAGRG,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,SAAC,KAAD,CAAcA,KAAMA,EAAMC,OAAQ,SAAAC,GAAG,OAAI,SAACZ,EAAD,UAAUY,GAAd,GADzB,EAIDC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,iBAAkBd,EAClBe,cAAe,CAAEZ,MAAO,GAAIE,SAAU,IACtCW,SAVkB,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9CP,GAASQ,EAAAA,EAAAA,IAAMH,IACfC,GAAc,GACdC,GACD,EAGC,SAKG,gBAAGE,EAAH,EAAGA,aAAH,OACC,UAAC9B,EAAD,CAAW+B,aAAa,MAAxB,WACE,UAACvB,EAAD,YACE,SAACL,EAAD,CAAO6B,QAAQ,QAAf,oBACA,SAAC5B,EAAD,CACE6B,GAAG,QACHC,KAAK,QACLjB,KAAK,QACLkB,YAAY,kBAEd,SAACnB,EAAD,CAAOC,KAAK,cAGd,UAACT,EAAD,YACE,SAACL,EAAD,CAAO6B,QAAQ,WAAf,uBACA,SAAC5B,EAAD,CACE6B,GAAG,WACHC,KAAK,WACLjB,KAAK,WACLkB,YAAY,cAEd,SAACnB,EAAD,CAAOC,KAAK,iBAGd,SAACX,EAAD,CAAO4B,KAAK,SAASE,SAAUN,EAA/B,sBAxBH,GA+BN,ECtEYO,EAAYpC,EAAAA,GAAAA,IAAH,+JCctB,EAXc,WACZ,OACE,UAACoC,EAAD,YACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAClB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormLogin = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  /* height: 300px; */\n  padding: 32px;\n  border-radius: 8px;\n  background-color: #303846;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 4px;\n  color: #ffffff;\n`;\n\nexport const Input = styled(Field)`\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 16px;\n  padding-right: 16px;\n  color: #ffffff;\n  background-color: #515967;\n  border: 1px solid #cecdcd;\n  border-radius: 4px;\n\n  &::placeholder {\n    font-size: 14px;\n    color: #a7a7a7;\n  }\n`;\n\nexport const LogIn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* margin-top: auto; */\n  padding: 8px;\n  color: #ffffff;\n  border-radius: 4px;\n  border-style: none;\n  background-color: #f15c27;\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out;\n\n  &:hover {\n    background-color: #e14913;\n  }\n`;\n\nexport const Message = styled.p`\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 8px;\n  padding-right: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: red;\n  text-align: end;\n  border-radius: 4px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n\n  &:last-of-type {\n    margin-bottom: 16px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/authOperations';\nimport {\n  FormLogin,\n  Label,\n  Input,\n  LogIn,\n  Message,\n  Wrap,\n} from './LoginForm.styled';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  password: Yup.string()\n    .min(4, 'Should be more 4 characters')\n    .required('This field is required'),\n});\n\nconst Error = ({ name }) => (\n  <ErrorMessage name={name} render={msg => <Message>{msg}</Message>} />\n);\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(logIn(values));\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={ValidationSchema}\n      initialValues={{ email: '', password: '' }}\n      onSubmit={handleSubmmit}\n    >\n      {({ isSubmitting }) => (\n        <FormLogin autoComplete=\"off\">\n          <Wrap>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"123@mail.com\"\n            />\n            <Error name=\"email\" />\n          </Wrap>\n\n          <Wrap>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"12345678\"\n            />\n            <Error name=\"password\" />\n          </Wrap>\n\n          <LogIn type=\"submit\" disabled={isSubmitting}>\n            Log In\n          </LogIn>\n        </FormLogin>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  max-width: 420px;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm';\nimport { Container } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["FormLogin","styled","Form","Label","Input","Field","LogIn","Message","Wrap","ValidationSchema","Yup","shape","email","required","password","min","Error","name","render","msg","LoginForm","dispatch","useDispatch","validationSchema","initialValues","onSubmit","values","setSubmitting","resetForm","logIn","isSubmitting","autoComplete","htmlFor","id","type","placeholder","disabled","Container","Helmet"],"sourceRoot":""}