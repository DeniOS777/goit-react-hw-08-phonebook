{"version":3,"file":"static/js/948.c2b887e2.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Box.js","components/Filter/Filter.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectorFilterValue = state => state.filter;\n\nexport const selectorContacts = state => state.contacts.items;\n\nexport const selectorIsLoading = state => state.contacts.isLoading;\n\nexport const selectorError = state => state.contacts.error;\n\nexport const selectorFilteredContacts = createSelector(\n  [selectorFilterValue, selectorContacts],\n  (filterValue, contacts) => {\n    const normalizeFilter = filterValue.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = ({ height = '40', color = '#4fa94d' }) => {\n  return (\n    <ThreeDots\n      height={height}\n      width=\"40\"\n      radius=\"9\"\n      color={color}\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[5]}px;\n  border: ${p => `1px solid ${p.theme.colors.inputBorder}`};\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: ${p => p.theme.colors.background};\n`;\n\nexport const Label = styled.label`\n  margin-bottom: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.lm};\n  letter-spacing: 0.03em;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[6]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  letter-spacing: 0.03em;\n  border: ${p => `1px solid ${p.theme.colors.inputBorder}`};\n  border-radius: ${p => p.theme.radii.sm};\n\n  &::placeholder {\n    font-size: ${p => p.theme.fontSizes.s};\n    color: ${p => p.theme.colors.textPlaceholder};\n    letter-spacing: 0.03em;\n  }\n\n  &:focus {\n    outline: ${p => `2px solid ${p.theme.colors.lightBlue}`};\n    border-color: transparent;\n  }\n`;\n\nexport const WrapName = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n\n  &:focus-within svg {\n    fill: ${p => p.theme.colors.green};\n  }\n\n  & svg {\n    position: absolute;\n    left: 8px;\n    fill: ${p => p.theme.colors.inputBorder};\n    transition: fill 250ms ease-in-out;\n  }\n\n  &:hover svg {\n    fill: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const WrapNumber = styled(WrapName)``;\n\nexport const AddContact = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.green};\n  border-style: none;\n  border-radius: ${p => p.theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 300ms ease-in-out, transform 100ms ease-in-out;\n\n  &:focus {\n    outline: ${p => `2px solid ${p.theme.colors.lightBlue}`};\n    border-color: transparent;\n  }\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.greenHover};\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n\n  &:disabled {\n    background-color: ${p => p.theme.colors.lightGrey};\n    transform: none;\n    cursor: not-allowed;\n  }\n`;\n","import { useState } from 'react';\nimport { BsFillPersonFill, BsFillTelephoneFill } from 'react-icons/bs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { selectorContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { Loader } from 'components/Loader';\nimport {\n  Form,\n  Label,\n  Input,\n  WrapName,\n  WrapNumber,\n  AddContact,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const inputNameId = nanoid();\n  const inputNumberId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('This field doesn`t exist');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsAdding(true);\n    const normalizeFindDuplicateContacts = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (normalizeFindDuplicateContacts) {\n      resetForm();\n      setIsAdding(false);\n      return alreadyHasContactNotification(name);\n    }\n\n    dispatch(addContact({ name, number })).then(res => {\n      if (res.meta.requestStatus === 'fulfilled') {\n        successfullyAddedContactNotification(name);\n        setIsAdding(false);\n      }\n    });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function successfullyAddedContactNotification(name) {\n    return toast.success(`The contact with name \"${name}\" added successfully`);\n  }\n\n  function alreadyHasContactNotification(name) {\n    return toast.info(`The contact with name \"${name}\" is already in contacts`);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label htmlFor={inputNameId}>Name</Label>\n      <WrapName>\n        <Input\n          id={inputNameId}\n          placeholder=\"Enter name...\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <BsFillPersonFill size=\"18\" />\n      </WrapName>\n\n      <Label htmlFor={inputNumberId}>Number</Label>\n      <WrapNumber>\n        <BsFillTelephoneFill size=\"18\" />\n        <Input\n          id={inputNumberId}\n          placeholder=\"Enter number...\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </WrapNumber>\n      <AddContact type=\"submit\" disabled={isAdding}>\n        {isAdding ? <Loader height=\"18\" /> : 'Add contact'}\n      </AddContact>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  border-left: ${({ theme }) => `4px solid ${theme.colors.green}`};\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: ${({ theme }) => theme.colors.contact};\n  box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ContactName = styled.p`\n  margin-right: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n\n  & a:focus {\n    outline: ${p => `2px solid ${p.theme.colors.lightBlue}`};\n    border-color: transparent;\n  }\n`;\n\nexport const ContactDelete = styled.button`\n  display: flex;\n  width: 35px;\n  height: 35px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border-style: none;\n  border-radius: ${p => p.theme.radii.sm};\n  background: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out;\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    fill: ${({ theme }) => theme.colors.red};\n    transition: fill 250ms ease-in-out;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.lightGrey};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.middleGrey};\n  }\n\n  &:focus {\n    outline: ${p => `2px solid ${p.theme.colors.lightBlue}`};\n    border-color: transparent;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { ContactsItem, ContactName, ContactDelete } from './ContactItem.styled';\nimport { VscTrash } from 'react-icons/vsc';\nimport { Loader } from 'components/Loader';\n\nconst ContactItem = ({ id, name, number, clearFilter }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeletingContact = () => {\n    console.log(id);\n    setIsDeleting(true);\n    dispatch(deleteContact(id)).then(res => {\n      if (res.meta.requestStatus === 'fulfilled') {\n        toast.success(`The contact named ${name} deleted successfully`);\n        clearFilter();\n      }\n    });\n  };\n\n  return (\n    <ContactsItem>\n      <ContactName>\n        {name}: <a href=\"tel:\">{number}</a>\n      </ContactName>\n\n      {isDeleting ? (\n        <Loader height=\"35\" />\n      ) : (\n        <ContactDelete onClick={handleDeletingContact} type=\"button\">\n          <VscTrash aria-label=\"delete contact\" />\n        </ContactDelete>\n      )}\n    </ContactsItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  clearFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  /* max-width: 370px; */\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { resetFilter } from 'redux/filter/filterSlice';\nimport {\n  selectorFilteredContacts,\n  selectorFilterValue,\n} from 'redux/contacts/contactsSelectors';\nimport ContactItem from '../ContactItem';\nimport { ContactsList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filterValue = useSelector(selectorFilterValue);\n  const filteredContacts = useSelector(selectorFilteredContacts);\n\n  const clearFilter = () => {\n    const emptyFilteredContacts =\n      filteredContacts.length - 1 === 0 && filterValue !== '';\n\n    if (emptyFilteredContacts) {\n      dispatch(resetFilter());\n    }\n  };\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          clearFilter={clearFilter}\n        />\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  border: ${({ theme }) => `1px solid ${theme.colors.inputBorder}`};\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: ${p => p.theme.colors.background};\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding-right: 8px;\n\n  & svg {\n    position: absolute;\n    top: 5px;\n    left: 6px;\n    fill: ${p => p.theme.colors.inputBorder};\n  }\n`;\n\nexport const FilterLabel = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n  letter-spacing: 0.02em;\n`;\n\nexport const InputSearch = styled.input`\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[6]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  letter-spacing: 0.03em;\n  border: ${p => `1px solid ${p.theme.colors.inputBorder}`};\n  border-radius: ${p => p.theme.radii.sm};\n\n  &::placeholder {\n    font-size: ${p => p.theme.fontSizes.s};\n    color: ${p => p.theme.colors.textPlaceholder};\n    letter-spacing: 0.03em;\n  }\n\n  &:focus {\n    outline: ${p => `2px solid ${p.theme.colors.lightBlue}`};\n    border-color: transparent;\n  }\n`;\n\nexport const CountDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 10px;\n  background-color: ${p => p.theme.colors.inputBorder};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Text = styled.p`\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const Count = styled.p`\n  font-size: ${p => p.theme.fontSizes.xm};\n  font-weight: ${p => p.theme.fontWeights.lightBold};\n  line-height: ${p => p.theme.lineHeights.text};\n  color: ${p => p.theme.colors.white};\n`;\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport {\n  selectorFilteredContacts,\n  selectorFilterValue,\n} from 'redux/contacts/contactsSelectors';\nimport {\n  Container,\n  Wrapper,\n  FilterLabel,\n  InputSearch,\n  CountDescription,\n  Count,\n  Text,\n} from './Filter.styled';\nimport { Box } from 'components/Box';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectorFilterValue);\n  const filteredContacts = useSelector(selectorFilteredContacts);\n  const countFilteredContacts = filteredContacts.length;\n\n  return (\n    <Container>\n      <Box>\n        <FilterLabel>Find contacts by name:</FilterLabel>\n        <Wrapper>\n          <InputSearch\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Search contacts...\"\n            value={filterValue}\n            onChange={e => dispatch(changeFilter(e.target.value.trimStart()))}\n          />\n          <AiOutlineSearch size=\"20\" />\n        </Wrapper>\n      </Box>\n\n      <CountDescription>\n        <Text>Find</Text>\n        <Count>{countFilteredContacts}</Count>\n      </CountDescription>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Error = styled.p`\n  font-weight: 500;\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectorError } from 'redux/contacts/contactsSelectors';\nimport { Error } from './ErrorMessage.styled';\n\nexport const ErrorMessage = () => {\n  const error = useSelector(selectorError);\n  return <Error>{error} </Error>;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  max-width: 420px;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport {\n  selectorContacts,\n  selectorError,\n  selectorIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Loader } from 'components/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport { Container } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n  const isLoading = useSelector(selectorIsLoading);\n  const error = useSelector(selectorError);\n\n  const isFirstLoading = useRef(true);\n\n  useEffect(() => {\n    dispatch(fetchContacts()).then(res => {\n      if (res.meta.requestStatus === 'fulfilled')\n        isFirstLoading.current = false;\n    });\n  }, [dispatch]);\n\n  const hasContacts = contacts.length > 0 && !error;\n  const shouldShowLoader = isLoading && isFirstLoading.current;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      <ContactForm />\n\n      <Filter />\n\n      {shouldShowLoader && <Loader height=\"10\" />}\n      {error && <ErrorMessage />}\n      {hasContacts && <ContactList />}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectorFilterValue","state","filter","selectorContacts","contacts","items","selectorIsLoading","isLoading","selectorError","error","selectorFilteredContacts","createSelector","filterValue","normalizeFilter","toLowerCase","name","includes","Loader","height","color","width","radius","ariaLabel","wrapperStyle","display","alignItems","justifyContent","wrapperClassName","visible","Form","styled","p","theme","space","colors","inputBorder","radii","sm","background","Label","fontSizes","lm","Input","m","s","textPlaceholder","lightBlue","WrapName","green","WrapNumber","AddContact","fontWeights","bold","white","greenHover","lightGrey","useState","setName","number","setNumber","isAdding","setIsAdding","dispatch","useDispatch","useSelector","inputNameId","nanoid","inputNumberId","handleChange","e","target","value","Error","resetForm","onSubmit","preventDefault","find","contact","toast","alreadyHasContactNotification","addContact","then","res","meta","requestStatus","successfullyAddedContactNotification","autoComplete","htmlFor","id","placeholder","type","onChange","pattern","title","required","size","disabled","ContactsItem","ContactName","ContactDelete","red","middleGrey","clearFilter","isDeleting","setIsDeleting","href","onClick","console","log","deleteContact","ContactsList","filteredContacts","length","resetFilter","map","Container","Wrapper","FilterLabel","InputSearch","CountDescription","Text","Count","xm","lightBold","lineHeights","text","Box","layout","flexbox","grid","border","position","countFilteredContacts","changeFilter","trimStart","ErrorMessage","isFirstLoading","useRef","useEffect","fetchContacts","current","hasContacts","shouldShowLoader","Helmet"],"sourceRoot":""}